// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/23/2021 12:38:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          FPGA
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module FPGA_vlg_vec_tst();
// constants                                           
// general purpose registers
reg b4;
reg Clock;
reg Reset;
// wires                                               
wire display1;
wire display2;
wire display3;
wire display4;
wire segA;
wire segB;
wire segC;
wire segD;
wire segE;
wire segF;
wire segG;

// assign statements (if any)                          
FPGA i1 (
// port map - connection between master ports and signals/registers   
	.b4(b4),
	.Clock(Clock),
	.display1(display1),
	.display2(display2),
	.display3(display3),
	.display4(display4),
	.Reset(Reset),
	.segA(segA),
	.segB(segB),
	.segC(segC),
	.segD(segD),
	.segE(segE),
	.segF(segF),
	.segG(segG)
);
initial 
begin 
#1000000 $finish;
end 

// b4
always
begin
	b4 = 1'b0;
	b4 = #20000 1'b1;
	#20000;
end 

// Clock
always
begin
	Clock = 1'b0;
	Clock = #5000 1'b1;
	#5000;
end 

// Reset
initial
begin
	Reset = 1'b0;
end 
endmodule

